name: Check IPTV-ORG Chinese M3U and Save Valid

on:
  schedule:
    - cron: '0 3 * * *'
  push:
    branches:
      - main
    paths:
      - 'm3u_checker.py'
      - '.github/workflows/check_iptv_org_zho.yml' # Or your workflow filename
  workflow_dispatch:

jobs:
  check_and_save_m3u: # Renamed job for clarity
    runs-on: ubuntu-latest
    
    env:
      M3U_URL: "https://iptv-org.github.io/iptv/languages/zho.m3u"
      STREAM_CHECK_TIMEOUT: 15
      M3U_DOWNLOAD_TIMEOUT: 60 # Increased slightly just in case
      OUTPUT_DIR_NAME: "generated_m3u" # Name of the directory for output
      OUTPUT_FILENAME_PREFIX: "valid_zho_"

    outputs: # Define job outputs
      generated_file_path: ${{ steps.run_checker.outputs.saved_m3u_path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Create output directory
        run: mkdir -p ${{ env.OUTPUT_DIR_NAME }} # Create directory if it doesn't exist

      - name: Run M3U Checker and Save Valid Links
        id: run_checker # Give this step an ID to reference its outputs
        run: |
          # Ensure m3u_checker.py is executable or called with python
          python m3u_checker.py "${{ env.M3U_URL }}" \
            --timeout ${{ env.STREAM_CHECK_TIMEOUT }} \
            --download-timeout ${{ env.M3U_DOWNLOAD_TIMEOUT }} \
            --output-dir "${{ env.OUTPUT_DIR_NAME }}" \
            --output-prefix "${{ env.OUTPUT_FILENAME_PREFIX }}"
            --workers 20
        # If your script is in a subdir like 'scripts/':
        # run: |
        #   python scripts/m3u_checker.py "${{ env.M3U_URL }}" \
        #     --timeout ${{ env.STREAM_CHECK_TIMEOUT }} \
        #     --download-timeout ${{ env.M3U_DOWNLOAD_TIMEOUT }} \
        #     --output-dir "${{ env.OUTPUT_DIR_NAME }}" \
        #     --output-prefix "${{ env.OUTPUT_FILENAME_PREFIX }}"

      - name: Upload Valid M3U Artifact
        if: success() && steps.run_checker.outputs.saved_m3u_path # Only run if checker succeeded and produced a file
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.OUTPUT_FILENAME_PREFIX }}$(date +'%Y-%m-%d') # Artifact name e.g., valid_zho_2023-10-27
          path: ${{ steps.run_checker.outputs.saved_m3u_path }} # Path to the file generated by python script
          retention-days: 7 # Optional: How long to keep the artifact
